#!/usr/bin/env python3

"""
Author: JWPettis

This program suggests lowland lakes available for recreational sport fishing in Thurston County, WA
based on user input.
"""

# Print the user welcome message
print("Welcome to the Thurston County Lake Finder Utility")

# Define a list of dictionaries with information about different fishing lakes
lakes = [
    {
        "name": "Black Lake",
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "yes",
        "AllYear": "yes",
	},
    {
        "name": "Chambers Lake",
        "MotorBoat": "no",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no"
        "AllYear": "yes"
    },
    {
        "name": "Clear Lake"
        "MotorBoat": "yes"
	"BoatLaunch": "yes"
	"TwoPole": "yes"
        "PvtResort": "no"
        "AllYear": "no"
    },
    {
        "name": "Deep Lake",
        "MotorBoat": "no",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {
	"name": "Hicks Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "no"
    },
    {
 	"name": "Lake Lawrence"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {   
        "name": "Long Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {
        "name": "McIntosh Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {
        "name": "Munn Lake"
        "MotorBoat": "no",
	"BoatLaunch": "yes",
	"TwoPole": "no",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {
        "name": "Offutt Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "yes",
        "AllYear": "yes",
    },
    {
        "name": "Pattison Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {
        "name": "St. Clair Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
    },
    {
        "name": "Summit Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": ["yes", "no"],
        "AllYear": "no",
    },
    {
        "name": "Ward Lake"
        "MotorBoat": "yes",
	"BoatLaunch": "yes",
	"TwoPole": "yes",
        "PvtResort": "no",
        "AllYear": "yes",
	},
]

# Define a function to ask the user a question and return their answer
def ask_question(question):
    return input(question + " ")

# Ask the user six questions
print("Answer the following questions to receive a fishing lake suggestion.")
MotorBoat = ask_question("Do you want to fish with a boat powered by a combustion engine?")
BoatLaunch = ask_question("Do you want to fish at a lake with a WDFW boat launch?")
TwoPole = ask_question("Do you want to fish with two poles?")
PvtResort = ask_question("Do you want to fish at a lake with a private resort?")
AllYear = ask_question("Do you want to fish at a lake that is open all year?")

# Define a function to filter the list of lakes based on the user's answers
def filter_lakes(MotorBoat, BoatLaunch, TwoPole, PvtResort, AllYear):
    filtered_lakes = []
    for lake in lakes:
        if MotorBoat.lower() in lake["MotorBoat"].lower() and BoatLaunch.lower() in lake["BoatLaunch"].lower() and TwoPole.lower() in lake["TwoPole"].lower() and PvtResort.lower() in lake["PvtResort"].lower() and "AllYear".lower() in lake["AllYear"].lower:
            filtered_lakes.append(lake)
    return filtered_lakes

# Filter the list of lakes based on the user's answers
filtered_lakes = filter_lakes(MotorBoat, BoatLaunch, TwoPole, PvtResort, AllYear)

# Display the suggestions to the user
if len(filtered_lakes) == 0:
    print("Sorry, we could not find any suitable lakes for you.")
else:
    print("Based on your answers, we suggest the following lakes:")
    for lake in filtered_lakes:
        print("- " + lake["name"])


